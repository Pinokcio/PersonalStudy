* 세마포어
- 정수 값을 갖는 객체
- 락과 컨디션 변수로 사용 가능
- 두 개의 루틴을 통해 컨트롤
  > sem_wait() : 원자적 동작, 세마포어의 값을 1 값소시키고, 그 값이 0 이상이면 즉시 리턴, 
  그렇지 않으면 호출자 대기, 세마포어 값이 음수라면, 그 값은 현재 대기 중인 쓰레드의 개수와 같다.
  > sem_post() : 원자적 동작, 세마포어의 값을 1 증가, 그 후 대기 중인 쓰레드 중 하나를 깨운다. sem_wait과
  달리 호출자를 대기시키지 않는다.
- 사용하기 전 초기화 필요. sem_init(&s, 0, 1);
  > 첫번째 인자 : 세마포어의 주소
  > 두번째 인자 : 0 = 현재 프로세스에서 쓰레드 간에 세마포어 공유, 프로세스 간에 세마포어 공유
  > 세번째 인자 : 세마포어의 초기값

* 이진 세마포어 (락)
- 세마포어를 "락"에 적용해본다
- 락은 사용 중 / 사용 가능 상태만 존재하므로 이진 세마포어 (Binary Semaphore)라고 부른다

* 컨디션 변수로서의 세마포어
- 쓰레드가 어떤 조건(condition)이 만족되기를 대기하도록 하기 위해 세마포어를 사용할 수 있다.
  > 하나의 쓰레드가 어떤 사건의 발생을 기다림
  > 또 다른 쓰레드는 해당 사건을 발생시킨 후, 시그널을 보내서 기다리는 쓰레드를 깨움

@ Reader-Writer 락
@ 식사하는 철학자
@ 제마포어(zemaphore)
